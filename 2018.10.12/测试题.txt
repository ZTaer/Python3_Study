0. 在 Python 中，else 语句能跟哪些语句进行搭配？
if else , while else , try except else

1. 请问以下例子中，循环中的 break 语句会跳过 else 语句吗？
def showMaxFactor(num):
    count = num // 2
    while count > 1:
        if num % count == 0:
            print('%d最大的约数是%d' % (num, count))
            break
        count -= 1
    else:
        print('%d是素数！' % num)

num = int(input('请输入一个数：'))
showMaxFactor(num)

会

2. 请目测以下代码会打印什么内容？
try:
        print('ABC')
except:
        print('DEF')
else:
        print('GHI')
finally:
        print('JKL')

'ABC'
'GHI'
'JKL'

3. 使用什么语句可以使你不比再担心文件打开后却忘了关闭的尴尬？
with as

4. 使用 with 语句固然方便，但如果出现异常的话，文件还会自动正常关闭吗？
如果with在打开文件时出现异常,那么就不会存在关闭,因为文件没有打开

5. 你可以换一种形式写出下边的伪代码吗？
with A() as a:
    with B() as b:
        suite
....没有理解

0. 使用 with 语句改写以下代码，让 Python 去关心文件的打开与关闭吧。

def file_compare(file1, file2):
    
    count = 0 # 统计行数
    differ = [] # 统计不一样的数量

    with open(file1) as f1:
        with open(file1) as f2:
            for line1 in f1:
                line2 = f2.readline()
                count += 1
                if line1 != line2:
                    differ.append(count)
    return differ

if __name__=="__main__":
    
file1 = input('请输入需要比较的头一个文件名：')
file2 = input('请输入需要比较的另一个文件名：')

differ = file_compare(file1, file2)

if len(differ) == 0:
    print('两个文件完全一样！')
else:
    print('两个文件共有【%d】处不同：' % len(differ))
    for each in differ:
        print('第 %d 行不一样' % each)

1. 你可以利用异常的原理，修改下面的代码使得更高效率的实现吗？
答：使用条件语句的代码非常直观明了，但是效率不高。因为程序会两次访问字典的键，一次判断是否存在（例如 if name in contacts），一次获得值（例如 print(name + ' : ' + contacts[name])）。
如果利用异常解决方案，我们可以简单避开每次需要使用 in 判断是否键存在字典中的操作。因为只要当键不存在字典中时，会触发 KeyError 异常，利用此特性我们可以修改代码如下：

print('|--- 欢迎进入通讯录程序 ---|')
print('|--- 1：查询联系人资料  ---|')
print('|--- 2：插入新的联系人  ---|')
print('|--- 3：删除已有联系人  ---|')
print('|--- 4：退出通讯录程序  ---|')

contacts = dict()

while 1:
    instr = int(input('\n请输入相关的指令代码：'))
    
    if instr == 1:
        name = input('请输入联系人姓名：')
        try:
            print(name + ' : ' + contacts[name])
        except KeyError:
            print('您输入的姓名不再通讯录中！')

    if instr == 2:
        name = input('请输入联系人姓名：')
        try:
            contacts[name] # 有点“为赋新词强说愁”的感觉
            print('您输入的姓名在通讯录中已存在 -->> ', end='')
            print(name + ' : ' + contacts[name])
            if input('是否修改用户资料（YES/NO）：') == 'YES':
                contacts[name] = input('请输入用户联系电话：')
        except KeyError:
            contacts[name] = input('请输入用户联系电话：')

    if instr == 3:
        name = input('请输入联系人姓名：')
        try:
            del(contacts[name]) # 也可以使用dict.pop()
        except KeyError:
            print('您输入的联系人不存在。')
            
    if instr == 4:
        break

print('|--- 感谢使用通讯录程序 ---|')


