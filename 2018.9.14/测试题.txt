0. 下边只有一种方式不能打开文件，请问是哪一种，为什么？
f = open('E:\test.txt', 'w')   # 
因为"\"需要转义 ，他会吧\t 变成tab键的效果
1. 打开一个文件我们使用open()函数，通过设置文件的打开模式，决定打开的文件具有那些性质，请问默认的打开模式是什么呢？
是否可被读/写
默认:rt以只读方式打开，并以文本模式查看
2. 请问 >>> open('E:\\Test.bin', 'xb') 是以什么样的模式打开文件的？
以二进制的方式打开，但如果文件已经存在，会返回异常
3. 尽管Python有所谓的“垃圾回收机制”，但对于打开了的文件，在不需要用到的时候我们仍然需要使用f.close()将文件对象“关闭”，这是为什么呢？
防止计算机出现意外，丢失数据，关闭文件可以保存数据到硬盘
lines = list(f)
5. 如何迭代打印出文件对象（f）中的每一行数据？
for i in f:
	print(i)
6. 文件对象的内置方法f.read([size=-1])作用是读取文件对象内容，size参数是可选的，那如果设置了size=10，例如f.read(10)，将返回什么内容呢？
从当前位置开始，返回10个字节，
7. 如何获得文件对象（f）当前文件指针的位置？
f.tell()
8. 还是视频中的那个演示文件（record.txt），请问为何f.seek(45, 0)不会出错，但f.seek(46)就出错了呢？
因为seek（）需要二个参数，并且读取模式要加入encoding='utf-8'
答：因为使用f.seek()定位的文件指针是按字节为单位进行计算的，演示文件（record.txt）是以GBK进行编码的，按照规则，
一个汉字需要占用两个字节，f.seek(45)的位置位于字符“小”的开始位置，因此可以正常打印，而f.seek(46)的位置刚好位于字符“小”的中间位置，
因此按照GBK编码的形式无法将其解码！


0. 尝试将文件（  OpenMe.mp3 (700 Bytes, 下载次数: 6427) ）打印到屏幕上
1. 编写代码，将上一题中的文件（OpenMe.mp3）保存为新文件（OpenMe.txt）
#   #   打开文件 ,  并且一行一行的显示
    music = open('G:\\STUDY\\Python3\\2018.9.14\\OpenMe.mp3' ,'at+')
    music_txt = open('G:\\STUDY\\Python3\\2018.9.14\\OpenMe.txt' ,'at+')
    music.seek(0,0)
    for each in music:
        print(each)
        music_txt.write(each) # 写入文档
    music.close()
    music_txt.close()
